name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      artifactPath: scheduler/target
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: maven

      - name: Install libs
        run: mvn clean

      - name: Build with Maven
        run: mvn clean package -Dmaven.test.skip

      - name: Find VERSION
        id: find_version
        run: |
          VERSION=$(find scheduler/target -name '*-jar-with-dependencies.jar' | sed 's/.*-\([0-9.]*\)-jar-with-dependencies\.jar/\1/')
          echo "::set-output name=version::$VERSION"
          echo "Extracted version: $VERSION"

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.find_version.outputs.version }}
          release_name: ${{ steps.find_version.outputs.version }}
          body: ${{ steps.find_version.outputs.version }} auto-generated by GitHub Actions
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUBTOKEN }}

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.artifactPath }}/PPPYSO-${{ steps.find_version.outputs.version }}-jar-with-dependencies.jar
          asset_name: PPPYSO-${{ steps.find_version.outputs.version }}.jar
          asset_content_type: application/java-archive
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUBTOKEN }}
